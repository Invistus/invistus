name: Deploy Web Application

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

on:
  push:
    branches:
      - 2-chore-create-cicd-with-github-actions
      - develop
      - 'releases/**'

env:
  BUCKET_NAME: invistus-web

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install and Build
        working-directory: ./web
        run: |
          npm ci
          npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: web/build/ 

  deploy_dev:
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    steps:

      # AWS Login with OIDC
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}
          role-session-name: github-action-session
          aws-region: ${{ secrets.AWS_REGION }}

      # Create bucket
      - name: Create bucket if it doesn't exist
        id: check-bucket
        continue-on-error: true
        run: |
          aws s3api head-bucket --bucket "$BUCKET_NAME-dev" >/dev/null 2>&1
          if [[ ${?} -eq 0 ]]; then
            echo "Bucket exists already"
          else
            aws s3api create-bucket --bucket $BUCKET_NAME-dev --region ${{ secrets.AWS_REGION }} --create-bucket-configuration LocationConstraint=${{ secrets.AWS_REGION }}
          fi

      # Tag S3 bucket for web application 
      - name: Tag S3 Bucket
        run: |
          aws s3api put-bucket-tagging --bucket $BUCKET_NAME-dev --tagging 'TagSet=[{Key=Application,Value=Invistus},{Key=Component,Value=Web},{Key=Environment,Value=dev}]'

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifact

      # Deploy web pkg to S3 bucket
      - name: Deploy to S3 bucket
        run: |
          aws s3 sync . s3://$BUCKET_NAME-dev --delete


